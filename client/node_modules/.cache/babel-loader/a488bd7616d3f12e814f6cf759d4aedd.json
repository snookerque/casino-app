{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register User - Push to login on success\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/routes/api/users/register\", userData).then(function (res) {\n      return history.push(\"/login\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login user - save login details in local storage\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"/routes/api/users/login\", userData).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\danfa\\Projects\\Main_CA\\src\\tset\\server\\client\\src\\actions\\authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA2D,SAA3D,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC7DT,IAAAA,KAAK,CACFU,IADH,CACQ,4BADR,EACsCH,QADtC,EAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KAFX,EAGGC,KAHH,CAGS,UAAAC,GAAG;AAAA,aACRN,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEb,UADC;AAEPc,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CADA;AAAA,KAHZ;AASD,GAV2B;AAAA,CAArB,C,CAYP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAb,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC/CT,IAAAA,KAAK,CACFU,IADH,CACQ,yBADR,EACmCH,QADnC,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AAAA,UACHS,KADG,GACOT,GAAG,CAACO,IADX,CACHE,KADG;AAEXC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACApB,MAAAA,YAAY,CAACoB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B;AACAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,KARH,EASGV,KATH,CASS,UAAAC,GAAG;AAAA,aACRN,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEb,UADC;AAEPc,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CADA;AAAA,KATZ;AAeD,GAhBgC;AAAA,CAA1B,C,CAkBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,OAAO,EAAI;AACvC,SAAO;AACLR,IAAAA,IAAI,EAAEZ,gBADD;AAELa,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO;AACLV,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,IAAMsB,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAlB,QAAQ,EAAI;AAC1Ca,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA3B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,IAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAJyB;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// Register User - Push to login on success\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/routes/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login user - save login details in local storage\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/routes/api/users/login\", userData)\r\n    .then(res => {\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setAuthToken(token);\r\n      const decoded = jwt_decode(token);\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser({}));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}