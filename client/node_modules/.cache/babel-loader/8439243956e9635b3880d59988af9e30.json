{"ast":null,"code":"import Web3 from \"web3\";\nvar getWeb3 = new Promise(function (resolve, reject) {\n  window.addEventListener(\"load\", function () {\n    var results;\n    var web3 = window.web3; // Checking if Web3 has been injected by the browser MetaMask\n\n    if (typeof web3 !== \"undefined\") {\n      // Use MetaMask's provider.\n      web3 = new Web3(web3.currentProvider);\n      results = {\n        web3: web3\n      };\n      console.log(\"Injected web3 detected.\");\n      resolve(results);\n    } else {\n      // If no web3 is detected, then the local web3 provider is loaded.\n      var provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n      web3 = new Web3(provider);\n      results = {\n        web3: web3\n      };\n      console.log(\"No web3 instance injected, using Local web3.\");\n      resolve(results);\n    }\n  });\n});\nexport default getWeb3;","map":{"version":3,"sources":["C:\\Users\\danfa\\Projects\\Main_CA\\src\\tset\\server\\client\\src\\utils\\getWeb3.js"],"names":["Web3","getWeb3","Promise","resolve","reject","window","addEventListener","results","web3","currentProvider","console","log","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAClDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAW;AACzC,QAAIC,OAAJ;AACA,QAAIC,IAAI,GAAGH,MAAM,CAACG,IAAlB,CAFyC,CAGzC;;AACA,QAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC/B;AACAA,MAAAA,IAAI,GAAG,IAAIR,IAAJ,CAASQ,IAAI,CAACC,eAAd,CAAP;AAEAF,MAAAA,OAAO,GAAG;AACRC,QAAAA,IAAI,EAAEA;AADE,OAAV;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAR,MAAAA,OAAO,CAACI,OAAD,CAAP;AACD,KATD,MASO;AACL;AACA,UAAIK,QAAQ,GAAG,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAf;AACAN,MAAAA,IAAI,GAAG,IAAIR,IAAJ,CAASY,QAAT,CAAP;AACAL,MAAAA,OAAO,GAAG;AACRC,QAAAA,IAAI,EAAEA;AADE,OAAV;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAR,MAAAA,OAAO,CAACI,OAAD,CAAP;AACD;AACF,GAvBD;AAwBD,CAzBa,CAAd;AA2BA,eAAeN,OAAf","sourcesContent":["import Web3 from \"web3\";\r\n\r\nlet getWeb3 = new Promise(function(resolve, reject) {\r\n  window.addEventListener(\"load\", function() {\r\n    var results;\r\n    var web3 = window.web3;\r\n    // Checking if Web3 has been injected by the browser MetaMask\r\n    if (typeof web3 !== \"undefined\") {\r\n      // Use MetaMask's provider.\r\n      web3 = new Web3(web3.currentProvider);\r\n\r\n      results = {\r\n        web3: web3\r\n      };\r\n      console.log(\"Injected web3 detected.\");\r\n      resolve(results);\r\n    } else {\r\n      // If no web3 is detected, then the local web3 provider is loaded.\r\n      var provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\r\n      web3 = new Web3(provider);\r\n      results = {\r\n        web3: web3\r\n      };\r\n      console.log(\"No web3 instance injected, using Local web3.\");\r\n      resolve(results);\r\n    }\r\n  });\r\n});\r\n\r\nexport default getWeb3;\r\n"]},"metadata":{},"sourceType":"module"}